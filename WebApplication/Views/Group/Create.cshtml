@model WebApplication.Models.Group

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="panel panel-primary">
    <div class="panel-heading panel-head">My Group</div>
    <div id="frm-author" class="panel-body">
        <div class="modal-header">
            <h3 class="modal-title">Create new group</h3>
        </div>
        <div class="modal-body">

            <dv class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GroupDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.GroupDescription, new { htmlAttributes = new { @class = "form-control" } })<br />
                        @Html.ValidationMessageFor(model => model.GroupDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GroupType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.DropDownListFor(model => model.GroupType, new List<SelectListItem>() { new SelectListItem { Text = "Public", Value = "true", Selected = Model.GroupType ?? true }, new SelectListItem { Text = "Private", Value = "false", Selected = Model.GroupType ?? false } })
                        @Html.ValidationMessageFor(model => model.GroupType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GroupParent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-lg-4">
                        @Html.DropDownListFor(model => model.GroupParent, new SelectList(ViewBag.Parent, "ID", "GroupName", Model.GroupName), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GroupParent, "", new { @class = "text-danger" })
                    </div>
                </div>
        </div>
    </div>
    <div>
        <span class="label label-danger" style="font-size: 15px;color:white">@TempData["ErrorMessage"]</span>
    </div>
    <div class="modal-footer">

        <input type="submit" value="Create" class="btn btn-success" />
        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-danger" })
    </div>
</div>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

